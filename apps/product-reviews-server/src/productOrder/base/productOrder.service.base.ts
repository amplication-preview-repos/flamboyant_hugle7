/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, ProductOrder as PrismaProductOrder } from "@prisma/client";

export class ProductOrderServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.ProductOrderCountArgs, "select">
  ): Promise<number> {
    return this.prisma.productOrder.count(args);
  }

  async productOrders<T extends Prisma.ProductOrderFindManyArgs>(
    args: Prisma.SelectSubset<T, Prisma.ProductOrderFindManyArgs>
  ): Promise<PrismaProductOrder[]> {
    return this.prisma.productOrder.findMany<Prisma.ProductOrderFindManyArgs>(
      args
    );
  }
  async productOrder<T extends Prisma.ProductOrderFindUniqueArgs>(
    args: Prisma.SelectSubset<T, Prisma.ProductOrderFindUniqueArgs>
  ): Promise<PrismaProductOrder | null> {
    return this.prisma.productOrder.findUnique(args);
  }
  async createProductOrder<T extends Prisma.ProductOrderCreateArgs>(
    args: Prisma.SelectSubset<T, Prisma.ProductOrderCreateArgs>
  ): Promise<PrismaProductOrder> {
    return this.prisma.productOrder.create<T>(args);
  }
  async updateProductOrder<T extends Prisma.ProductOrderUpdateArgs>(
    args: Prisma.SelectSubset<T, Prisma.ProductOrderUpdateArgs>
  ): Promise<PrismaProductOrder> {
    return this.prisma.productOrder.update<T>(args);
  }
  async deleteProductOrder<T extends Prisma.ProductOrderDeleteArgs>(
    args: Prisma.SelectSubset<T, Prisma.ProductOrderDeleteArgs>
  ): Promise<PrismaProductOrder> {
    return this.prisma.productOrder.delete(args);
  }
}
